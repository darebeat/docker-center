user nginx;
worker_processes auto;

error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;
worker_rlimit_nofile 65535;

events {
use epoll;
  worker_connections  1024;
}


stream{
  include /etc/nginx/conf.d/stream-*.conf;
}

http {
  include /etc/nginx/mime.types;
  default_type application/octet-stream;

  log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';

  access_log /var/log/nginx/access.log  main;

  sendfile on;
  #tcp_nopush on;
  keepalive_timeout  65;

  # 启用gzip
  gzip on;
  # 需要压缩文件的最小尺寸，单位是B
  gzip_min_length  1000;
  # gzip文件缓存大小
  gzip_buffers 4 8k; # 4和8之间有个空格的啊
  # gzip压缩文件格式，以下涵盖了一般所需的类型
  gzip_types text/plain application/x-javascript text/css application/xml application/javascript application/json;
  # gzip压缩等级，数值越高压缩得越狠，也越占资源
  gzip_comp_level 3;

  client_max_body_size 50m; #缓冲区代理缓冲用户端请求的最大字节数,可以理解为保存到本地再传给用户
  client_body_buffer_size 256k;
  client_header_timeout 3m;
  client_body_timeout 3m;
  send_timeout 3m;
  proxy_connect_timeout 300s; #nginx跟后端服务器连接超时时间(代理连接超时)
  proxy_read_timeout 300s; #连接成功后，后端服务器响应时间(代理接收超时)
  proxy_send_timeout 300s;
  proxy_buffer_size 64k; #设置代理服务器（nginx）保存用户头信息的缓冲区大小
  proxy_buffers 4 32k; #proxy_buffers缓冲区，网页平均在32k以下的话，这样设置
  proxy_busy_buffers_size 64k; #高负荷下缓冲大小（proxy_buffers*2）
  proxy_temp_file_write_size 64k; #设定缓存文件夹大小，大于这个值，将从upstream服务器传递请求，而不缓冲到磁盘
  proxy_ignore_client_abort on; #不允许代理端主动关闭连接

  include /etc/nginx/conf.d/default.conf;
  include /etc/nginx/conf.d/http-*.conf;
}