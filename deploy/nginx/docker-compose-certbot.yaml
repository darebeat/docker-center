version: "3"

services:
  certbot-init:
    image: darebeat/certbot
    container_name: certbot-renew
    env_file:
      - .env
    environment:
      - TZ=Asia/Shanghai
    volumes:
      - ./conf/certs/etc:/etc/letsencrypt:z
      - ./conf/certs/lib:/var/lib/letsencrypt:z
      - ./conf/certs/log:/var/log/letsencrypt:z
      # - ./domains:/opt/certbot/certbot-dns-cnyun/domains:ro
    command:
      # 首次部署需要执行该容器生成证书
      - sh
      - -c
      - |
          certbot certonly \
            -m darebeat@126.com \
            -d *.darebeat.cn \
            -d *.blog.darebeat.cn \
            -d darebeat.cn \
            --manual --preferred-challenges dns \
            --manual-auth-hook "/opt/certbot/certbot-dns-cnyun/dns-flush.sh hwy add" \
            --manual-cleanup-hook "/opt/certbot/certbot-dns-cnyun/dns-flush.sh hwy clean"
    entrypoint: ""
      

  certbot-renew:
    image: darebeat/certbot
    container_name: certbot-renew
    env_file:
      - .env
    environment:
      - TZ=Asia/Shanghai
    volumes:
      - ./conf/certs/etc:/etc/letsencrypt:z
      - ./conf/certs/lib:/var/lib/letsencrypt:z
      - ./conf/certs/log:/var/log/letsencrypt:z
      # - ./domains:/opt/certbot/certbot-dns-cnyun/domains:ro
    command: 
      - sh
      - -c
      - |
          crontab -l >> /cronfig
          echo "1 1 1 * * certbot renew \
            --manual --preferred-challenges dns \
            --manual-auth-hook \"/opt/certbot/certbot-dns-cnyun/dns-flush.sh hwy add\" \
            --manual-cleanup-hook \"/opt/certbot/certbot-dns-cnyun/dns-flush.sh hwy clean\">> /var/log/renew.log" >> /cronfig
          crontab /cronfig
          touch /var/log/renew.log
          crond
          tail -f /var/log/renew.log
    entrypoint: ""

  nginx:
    image: nginx:alpine
    container_name: nginx
    hostname: nginx
    restart: always
    network_mode: host
    environment:
      - TZ=Asia/Shanghai
    volumes:
      - ./conf/nginx.conf:/etc/nginx/nginx.conf
      - ./conf/conf.d:/etc/nginx/conf.d
      - ./conf/certs/etc:/etc/nginx/certs
          
networks:
  deploy:
    external: true